package com.example.MyBookShopApp.model.book;

import com.example.MyBookShopApp.model.book.links.Book2AuthorEntity;
import com.example.MyBookShopApp.model.book.links.Book2GenreEntity;
import com.example.MyBookShopApp.model.book.links.Book2UserEntity;
import com.example.MyBookShopApp.model.book.links.Book2TagEntity;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Getter;
import lombok.Setter;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "books")
@Getter
@Setter
@ApiModel("entity representing a book")
public class BookEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    @ApiModelProperty("id generated by db automatically")
    private Integer id;
    @Column(columnDefinition = "DATE")
    @ApiModelProperty("book publication date")
    private Date pubDate;
    @Column(columnDefinition = "SMALLINT NOT NULL")
    @ApiModelProperty("if isBestseller = 1, the book is considered to be a bestseller, if 0, the book is not a bestseller")
    private Integer isBestseller;
    @Column(nullable = false)
    @ApiModelProperty("mnemonic identity sequence")
    private String slug;
    @Column(nullable = false)
    @ApiModelProperty("book title")
    private String title;
    @ApiModelProperty("image url")
    private String image;
    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("the description of the book")
    private String description;
    @Column(nullable = false)
    @ApiModelProperty("book price without discount")
    private Integer price;
    @Column(columnDefinition = "SMALLINT NOT NULL DEFAULT 0")
    @ApiModelProperty("discount value for book")
    private Integer discount;

    @JsonManagedReference
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    private Set<Book2AuthorEntity> authors = new HashSet<>();

    @JsonManagedReference
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    private Set<Book2UserEntity> users = new HashSet<>();

    @JsonManagedReference
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    private Set<Book2TagEntity> tags = new HashSet<>();
    @JsonManagedReference
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    private Set<Book2GenreEntity> genres = new HashSet<>();
}
